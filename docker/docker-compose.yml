services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password # Change in production!
      POSTGRES_DB: scanner_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data/

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/scanner_db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      API_TOKEN: your_demo_api_token # Change in production!
    depends_on:
      - db
      - redis

  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: python -m celery -A main worker --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/scanner_db
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - backend

  flower:
    image: mher/flower:latest
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  db_data: